---
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const allPosts = (await getCollection('blog'))
    .filter((post) => !post.data.ignore)
    .sort((a, b) => {
      const aDate = new Date(a.data.pubDate);
      const bDate = new Date(b.data.pubDate);
      return bDate.getTime() - aDate.getTime();
    });
  const allYears = [...new Set(allPosts.flatMap((post) => post.data.pubDate.getFullYear()))];
  return allYears.flatMap((year) => {
    const yearFilteredPosts = allPosts.filter((post) => post.data.pubDate.getFullYear() === year);
    const allMonths = [
      ...new Set(
        yearFilteredPosts.flatMap((post) =>
          (post.data.pubDate.getMonth() + 1).toString().padStart(2, '0'),
        ),
      ),
    ];
    return allMonths.flatMap((month) => {
      const monthFilteredPosts = yearFilteredPosts.filter(
        (post) => (post.data.pubDate.getMonth() + 1).toString().padStart(2, '0') === month,
      );
      const allDates = [
        ...new Set(
          monthFilteredPosts.flatMap((post) =>
            post.data.pubDate.getDate().toString().padStart(2, '0'),
          ),
        ),
      ];
      return allDates.flatMap((date) => {
        return {
          params: { year: year.toString(), month: month.toString(), date: date.toString() },
        };
      });
    });
  });
}
const { year, month, date } = Astro.params;
return Astro.redirect(`/date/${year}/${month}/${date}/p1`, 308);
---
